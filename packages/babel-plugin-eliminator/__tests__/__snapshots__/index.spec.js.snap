// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`@startupjs/babel-plugin-eliminator keeps other exports: keeps other exports 1`] = `

export const a = 1
export {preload} from './'

      â†“ â†“ â†“ â†“ â†“ â†“

export const a = 1;
export var preload = undefined;


`;

exports[`@startupjs/babel-plugin-eliminator longer example. Keep \`foo\`, \`default\`: longer example. Keep \`foo\`, \`default\` 1`] = `

import usedByFoo from 'used-by-foo'
import usedByDefault from 'used-by-default'
import usedByBar from 'used-by-bar'

const varInFoo = 'var-in-foo'
const varInDefault = 'var-in-default'
const varInBar = 'var-in-bar'

export const foo = () => {
  return usedByFoo(varInFoo)
}

export default () => {
  return usedByDefault(varInDefault)
}

export function bar () {
  return usedByBar(varInBar)
}

      â†“ â†“ â†“ â†“ â†“ â†“

import usedByFoo from "used-by-foo";
import usedByDefault from "used-by-default";
const varInFoo = "var-in-foo";
const varInDefault = "var-in-default";
export const foo = () => {
  return usedByFoo(varInFoo);
};
export default () => {
  return usedByDefault(varInDefault);
};
export var bar = undefined;


`;

exports[`@startupjs/babel-plugin-eliminator longer example. Keep \`foo\`: longer example. Keep \`foo\` 1`] = `

import usedByFoo from 'used-by-foo'
import usedByDefault from 'used-by-default'
import usedByBar from 'used-by-bar'

const varInFoo = 'var-in-foo'
const varInDefault = 'var-in-default'
const varInBar = 'var-in-bar'

export const foo = () => {
  return usedByFoo(varInFoo)
}

export default () => {
  return usedByDefault(varInDefault)
}

export function bar () {
  return usedByBar(varInBar)
}

      â†“ â†“ â†“ â†“ â†“ â†“

import usedByFoo from "used-by-foo";
const varInFoo = "var-in-foo";
export const foo = () => {
  return usedByFoo(varInFoo);
};
export default undefined;
export var bar = undefined;


`;

exports[`@startupjs/babel-plugin-eliminator longer example. Remove \`foo\`, \`default\`: longer example. Remove \`foo\`, \`default\` 1`] = `

import usedByFoo from 'used-by-foo'
import usedByDefault from 'used-by-default'
import usedByBar from 'used-by-bar'

const varInFoo = 'var-in-foo'
const varInDefault = 'var-in-default'
const varInBar = 'var-in-bar'

export const foo = () => {
  return usedByFoo(varInFoo)
}

export default () => {
  return usedByDefault(varInDefault)
}

export function bar () {
  return usedByBar(varInBar)
}

      â†“ â†“ â†“ â†“ â†“ â†“

import usedByBar from "used-by-bar";
const varInBar = "var-in-bar";
export var foo = undefined;
export default undefined;
export function bar() {
  return usedByBar(varInBar);
}


`;

exports[`@startupjs/babel-plugin-eliminator longer example. Remove \`foo\`: longer example. Remove \`foo\` 1`] = `

import usedByFoo from 'used-by-foo'
import usedByDefault from 'used-by-default'
import usedByBar from 'used-by-bar'

const varInFoo = 'var-in-foo'
const varInDefault = 'var-in-default'
const varInBar = 'var-in-bar'

export const foo = () => {
  return usedByFoo(varInFoo)
}

export default () => {
  return usedByDefault(varInDefault)
}

export function bar () {
  return usedByBar(varInBar)
}

      â†“ â†“ â†“ â†“ â†“ â†“

import usedByDefault from "used-by-default";
import usedByBar from "used-by-bar";
const varInDefault = "var-in-default";
const varInBar = "var-in-bar";
export var foo = undefined;
export default () => {
  return usedByDefault(varInDefault);
};
export function bar() {
  return usedByBar(varInBar);
}


`;

exports[`@startupjs/babel-plugin-eliminator object in default export of magic filename. Keep keys \`client\` and \`isomorphic\`: object in default export of magic filename. Keep keys \`client\` and \`isomorphic\` 1`] = `

import { clientLib, clientLib2 } from 'client-lib'
import { serverLib, serverLib2 } from 'server-lib'
import buildLib from 'build-lib'
import isomorphicLib from 'isomorphic-lib'

const clientVar = clientLib()
const clientVar2 = clientLib2()
const serverVar = serverLib()
const serverVar2 = serverLib2()
const buildVar = buildLib()
const isomorphicVar = isomorphicLib()

export default {
  isomorphic: {
    allowUnusedPlugins: true,
    server: true
  },
  server: {
    init: options => ({
      api: expressApp => {
        expressApp.get('/hello', (req, res) => {
          res.send('Hello from server')
        })
      }
    })
  },
  plugins: {
    'serve-static-promo': {
      client: {
        redirectUrl: '/promo',
        testClient: 'hello client',
        clientVar
      },
      server: {
        testServer: 'hello server',
        serverVar
      },
      build: {
        testBuild: 'hello build',
        buildVar
      },
      isomorphic: {
        testIsomorphic: 'hello isomorphic',
        isomorphicVar
      }
    },
    permissions: {
      client: {
        testClient: 'permissions client',
        clientVar2
      },
      server: {
        testServer: 'permissions server',
        roles: ['admin', 'user'],
        serverVar2
      },
      build: {
        testBuild: 'permissions build',
        buildVar
      },
      isomorphic: {
        testIsomorphic: 'permissions isomorphic',
        isomorphicVar
      }
    }
  }
}

      â†“ â†“ â†“ â†“ â†“ â†“

import { clientLib, clientLib2 } from "client-lib";
import isomorphicLib from "isomorphic-lib";
const clientVar = clientLib();
const clientVar2 = clientLib2();
const isomorphicVar = isomorphicLib();
export default {
  isomorphic: {
    allowUnusedPlugins: true,
    server: true,
  },
  plugins: {
    "serve-static-promo": {
      client: {
        redirectUrl: "/promo",
        testClient: "hello client",
        clientVar,
      },
      isomorphic: {
        testIsomorphic: "hello isomorphic",
        isomorphicVar,
      },
    },
    permissions: {
      client: {
        testClient: "permissions client",
        clientVar2,
      },
      isomorphic: {
        testIsomorphic: "permissions isomorphic",
        isomorphicVar,
      },
    },
  },
};


`;

exports[`@startupjs/babel-plugin-eliminator object in magic function. Keep keys \`client\` and \`isomorphic\`: object in magic function. Keep keys \`client\` and \`isomorphic\` 1`] = `

import { createProject } from 'startupjs/registry'
import { clientLib, clientLib2 } from 'client-lib'
import { serverLib, serverLib2 } from 'server-lib'
import buildLib from 'build-lib'
import isomorphicLib from 'isomorphic-lib'

const clientVar = clientLib()
const clientVar2 = clientLib2()
const serverVar = serverLib()
const serverVar2 = serverLib2()
const buildVar = buildLib()
const isomorphicVar = isomorphicLib()

export default createProject({
  plugins: {
    'serve-static-promo': {
      client: {
        redirectUrl: '/promo',
        testClient: 'hello client',
        clientVar
      },
      server: {
        testServer: 'hello server',
        serverVar
      },
      build: {
        testBuild: 'hello build',
        buildVar
      },
      isomorphic: {
        testIsomorphic: 'hello isomorphic',
        isomorphicVar
      }
    },
    permissions: {
      client: {
        testClient: 'permissions client',
        clientVar2
      },
      server: {
        testServer: 'permissions server',
        roles: ['admin', 'user'],
        serverVar2
      },
      build: {
        testBuild: 'permissions build',
        buildVar
      },
      isomorphic: {
        testIsomorphic: 'permissions isomorphic',
        isomorphicVar
      }
    }
  }
})

      â†“ â†“ â†“ â†“ â†“ â†“

import { createProject } from "startupjs/registry";
import { clientLib, clientLib2 } from "client-lib";
import isomorphicLib from "isomorphic-lib";
const clientVar = clientLib();
const clientVar2 = clientLib2();
const isomorphicVar = isomorphicLib();
export default createProject({
  plugins: {
    "serve-static-promo": {
      client: {
        redirectUrl: "/promo",
        testClient: "hello client",
        clientVar,
      },
      isomorphic: {
        testIsomorphic: "hello isomorphic",
        isomorphicVar,
      },
    },
    permissions: {
      client: {
        testClient: "permissions client",
        clientVar2,
      },
      isomorphic: {
        testIsomorphic: "permissions isomorphic",
        isomorphicVar,
      },
    },
  },
});


`;

exports[`@startupjs/babel-plugin-eliminator object in magic function. Only parse magic function: object in magic function. Only parse magic function 1`] = `

import { createProject2 } from 'startupjs/registry'
export default createProject2({
  plugins: {
    'serve-static-promo': {
      client: {
        redirectUrl: '/promo',
      },
      server: {
        testServer: 'hello server',
      }
    }
  }
})

      â†“ â†“ â†“ â†“ â†“ â†“

import { createProject2 } from "startupjs/registry";
export default createProject2({
  plugins: {
    "serve-static-promo": {
      client: {
        redirectUrl: "/promo",
      },
      server: {
        testServer: "hello server",
      },
    },
  },
});


`;

exports[`@startupjs/babel-plugin-eliminator object in magic function. Throw error if there are keys other than \`ensureOnlyKeys\`: object in magic function. Throw error if there are keys other than \`ensureOnlyKeys\` 1`] = `

import { createProject } from 'startupjs/registry'
export default createProject({
  plugins: {
    'serve-static-promo': {
      client: {
        redirectUrl: '/promo'
      }
    },
    permissions: {
      client: {
        roles: ['admin', 'user']
      },
      magic: {
        testMagic: 'hello magic'
      }
    }
  }
})

      â†“ â†“ â†“ â†“ â†“ â†“

SyntaxError: /ws/dummy/index.js: 
createProject(): key is not listed in ensureOnlyKeys: 'magic'.
You can only use keys listed in \`ensureOnlyKeys\`:
  - client
  - isomorphic
  - server
  - build
[0m [90m 11 |[39m         roles[33m:[39m [[32m'admin'[39m[33m,[39m [32m'user'[39m][0m
[0m [90m 12 |[39m       }[33m,[39m[0m
[0m[31m[1m>[22m[39m[90m 13 |[39m       magic[33m:[39m {[0m
[0m [90m    |[39m       [31m[1m^[22m[39m[0m
[0m [90m 14 |[39m         testMagic[33m:[39m [32m'hello magic'[39m[0m
[0m [90m 15 |[39m       }[0m
[0m [90m 16 |[39m     }[0m

`;

exports[`@startupjs/babel-plugin-eliminator removes destructuring assignment (array): removes destructuring assignment (array) 1`] = `

const [a,b,c] = d
const e = d[0]
export const preload = () => {
  console.log(a,b,c,e)
}

      â†“ â†“ â†“ â†“ â†“ â†“

export var preload = undefined;


`;

exports[`@startupjs/babel-plugin-eliminator removes export function declaration. 1: removes export function declaration. 1 1`] = `

export function preload() {
  return {}
}

      â†“ â†“ â†“ â†“ â†“ â†“

export var preload = undefined;


`;

exports[`@startupjs/babel-plugin-eliminator removes export function declaration. 2: removes export function declaration. 2 1`] = `

export function staticPreload() {
  return {}
}

      â†“ â†“ â†“ â†“ â†“ â†“

export var staticPreload = undefined;


`;

exports[`@startupjs/babel-plugin-eliminator removes export variable declaration: removes export variable declaration 1`] = `

export var preload= function() {
  return {}
}

      â†“ â†“ â†“ â†“ â†“ â†“

export var preload = undefined;


`;

exports[`@startupjs/babel-plugin-eliminator removes re-exports: removes re-exports 1`] = `

export {preload} from './'

      â†“ â†“ â†“ â†“ â†“ â†“

export var preload = undefined;


`;

exports[`@startupjs/babel-plugin-eliminator removes references that are only used in server exports: removes references that are only used in server exports 1`] = `

var readFile = require('fs').readFile
import foo from 'foo'
// This is kept since it's not used by ssr exports
import { getStaticProps } from './'
const a = 1
function bar() {

}
var shouldHeep = 2
var alsoShouldKeep =3
console.log(alsoShouldKepp)
export function preload() {
  return {a, bar, foo, readFile: readFile.toString()}
}

      â†“ â†“ â†“ â†“ â†“ â†“

// This is kept since it's not used by ssr exports
import { getStaticProps } from "./";
var shouldHeep = 2;
var alsoShouldKeep = 3;
console.log(alsoShouldKepp);
export var preload = undefined;


`;

exports[`@startupjs/babel-plugin-eliminator throws error if both \`removeExports\` and \`keepExports\` are specified: throws error if both \`removeExports\` and \`keepExports\` are specified 1`] = `

export const foo = () => {}
export function bar () {}

      â†“ â†“ â†“ â†“ â†“ â†“

Error: /ws/dummy/index.js: You cannot specify both \`removeExports\` and \`keepExports\`

`;

exports[`@startupjs/babel-plugin-eliminator transform function calls: transform function calls 1`] = `

import { aggregation, BaseModel, accessControl } from 'startupjs/orm'
import { getAppName, getRoleId, DEFAULT_USER_ID } from 'server-lib'

const appName = getAppName()
const adminRoleId = getRoleId('admin')

export const access = accessControl({
  create: (doc, { session }) => session.roleId === adminRoleId,
  read: () => true,
  update: (doc, { session }) => session.roleId === adminRoleId || !doc.readonly,
  delete: (doc, { session }) => session.roleId === adminRoleId
})

export const $$createdByUser = aggregation(({ userId = DEFAULT_USER_ID }) => ({
  userId,
  $sort: { createdAt: -1 },
  appName
}))

export default class GamesModel extends BaseModel {
  async addNew () {
    await this.add({ name: 'New Game' })
  }
}

      â†“ â†“ â†“ â†“ â†“ â†“

import { BaseModel, __aggregationHeader } from "startupjs/orm";
export const access = undefined;
export const $$createdByUser = __aggregationHeader({
  collection: "games",
  name: "$$createdByUser",
});
export default class GamesModel extends BaseModel {
  async addNew() {
    await this.add({
      name: "New Game",
    });
  }
}


`;

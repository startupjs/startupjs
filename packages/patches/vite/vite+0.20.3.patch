diff --git a/node_modules/vite/dist/build/index.js b/node_modules/vite/dist/build/index.js
index 1922cf0..fb53777 100644
--- a/node_modules/vite/dist/build/index.js
+++ b/node_modules/vite/dist/build/index.js
@@ -52,6 +52,10 @@ async function createBaseRollupPlugins(root, resolver, options) {
         ...(rollupInputOptions.plugins || []),
         // vite:resolve
         buildPluginResolve_1.createBuildResolvePlugin(root, resolver),
+        // user transforms [before]
+        ...(transforms.length
+            ? [transform_1.createBuildJsTransformPlugin(transforms.filter(t => t.before))]
+            : []),
         // vite:esbuild
         await buildPluginEsbuild_1.createEsbuildPlugin(options.minify === 'esbuild', options.jsx),
         // vue
@@ -82,7 +86,7 @@ async function createBaseRollupPlugins(root, resolver, options) {
         }),
         // user transforms
         ...(transforms.length || Object.keys(vueCustomBlockTransforms).length
-            ? [transform_1.createBuildJsTransformPlugin(transforms, vueCustomBlockTransforms)]
+            ? [transform_1.createBuildJsTransformPlugin(transforms.filter(t => !t.before), vueCustomBlockTransforms)]
             : []),
         nodeResolve({
             rootDir: root,
diff --git a/node_modules/vite/dist/optimizer/pluginBuiltInBail.js b/node_modules/vite/dist/optimizer/pluginBuiltInBail.js
index a79151e..000d831 100644
--- a/node_modules/vite/dist/optimizer/pluginBuiltInBail.js
+++ b/node_modules/vite/dist/optimizer/pluginBuiltInBail.js
@@ -9,6 +9,7 @@ exports.createBuiltInBailPlugin = () => {
     return {
         name: 'vite:node-built-in-bail',
         resolveId(id, importer) {
+            if (id === 'events' || id === 'config') return null
             if (isbuiltin(id)) {
                 let importingDep;
                 if (importer) {
diff --git a/node_modules/vite/dist/server/index.js b/node_modules/vite/dist/server/index.js
index c21e1fa..8b1268e 100644
--- a/node_modules/vite/dist/server/index.js
+++ b/node_modules/vite/dist/server/index.js
@@ -57,13 +57,16 @@ function createServer(config) {
         serverPluginServiceWorker_1.serviceWorkerPlugin,
         serverPluginHmr_1.hmrPlugin,
         ...(transforms.length || Object.keys(vueCustomBlockTransforms).length
-            ? [transform_1.createServerTransformPlugin(transforms, vueCustomBlockTransforms)]
+            ? [transform_1.createServerTransformPlugin(transforms.filter(t => !t.before), vueCustomBlockTransforms)]
             : []),
         serverPluginVue_1.vuePlugin,
         serverPluginCss_1.cssPlugin,
         serverPluginEsbuild_1.esbuildPlugin,
         serverPluginJson_1.jsonPlugin,
         serverPluginAssets_1.assetPathPlugin,
+        ...(transforms.length
+            ? [transform_1.createServerTransformPlugin(transforms.filter(t => t.before))]
+            : []),
         serverPluginServeStatic_1.serveStaticPlugin
     ];
     resolvedPlugins.forEach((m) => m(context));
@@ -79,7 +82,7 @@ function createServer(config) {
 exports.createServer = createServer;
 function resolveServer({ https = false, httpsOption = {} }, requestListener) {
     if (https) {
-        return require('https').createServer(resolveHttpsConfig(httpsOption), requestListener);
+        return require('http2').createSecureServer({ allowHTTP1: true, ...resolveHttpsConfig(httpsOption) }, requestListener);
     }
     else {
         return require('http').createServer(requestListener);
diff --git a/node_modules/vite/dist/transform.js b/node_modules/vite/dist/transform.js
index 9d59fad..bd53157 100644
--- a/node_modules/vite/dist/transform.js
+++ b/node_modules/vite/dist/transform.js
@@ -12,7 +12,7 @@ function createServerTransformPlugin(transforms, customBlockTransforms) {
                     ctx.type = 'js';
                     if (ctx.body) {
                         code = code || (await utils_1.readBody(ctx.body));
-                        if (code) {
+                        if (code != null) {
                             ctx.body = await t.transform(code, utils_1.isImportRequest(ctx), false, path, query);
                             code = ctx.body;
                         }
